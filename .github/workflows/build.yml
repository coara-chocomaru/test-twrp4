name: Recovery Build (Legacy)

on:
  push:
    branches:
      - main  # 実行するブランチを指定

env:
  MANIFEST_URL: 'https://github.com/minimal-manifest-twrp/platform_manifest_twrp_omni'
  MANIFEST_BRANCH: 'twrp-9.0'
  DEVICE_TREE_URL: 'https://github.com/coara-chocomaru/smao-twrp/tree/main'
  DEVICE_TREE_BRANCH: 'main'
  DEVICE_PATH: 'device/h2/mdtab0801'
  DEVICE_NAME: 'mdtab0801'
  MAKEFILE_NAME: 'omni_mdtab0801'
  BUILD_TARGET: 'recovery'
  # COMMON_TREE_URLとCOMMON_PATHを必要に応じて指定してください
jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
    - name: Display Run Parameters
      run: |
        echo "::group::User Environment Variables"
        echo "Manifest URL: ${{ env.MANIFEST_URL }}"
        echo "Manifest Branch: ${{ env.MANIFEST_BRANCH }}"
        echo "Device Tree URL: ${{ env.DEVICE_TREE_URL }}"
        echo "Device Tree Branch: ${{ env.DEVICE_TREE_BRANCH }}"
        echo "Device Path: ${{ env.DEVICE_PATH }}"
        echo "Device Name: ${{ env.DEVICE_NAME }}"
        echo "Makefile Name: ${{ env.MAKEFILE_NAME }}"
        echo "Build Target: ${{ env.BUILD_TARGET }}.img"
        echo "::endgroup::"
 
    - name: Check Out
      uses: actions/checkout@v3

    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev libncurses5 python3

    - name: Install OpenJDK
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '8'

    - name: Setup SSH Keys
      if: ${{ startsWith(env.MANIFEST_URL, 'git@github.com') }}
      uses: webfactory/ssh-agent@v0.5.4
      with:
          ssh-private-key: |
              ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Install repo
      run: |
        mkdir ~/bin
        curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
        chmod a+x ~/bin/repo
        sudo ln -sf ~/bin/repo /usr/bin/repo
      
    - name: Initialize repo
      run: |
        mkdir workspace
        cd workspace
        echo "workspace-folder=$(pwd)" >> $GITHUB_OUTPUT
        git config --global user.name "azwhikaru"
        git config --global user.email "azwhikaru+37921907@github.com"
        repo init --depth=1 -u ${{ env.MANIFEST_URL }} -b ${{ env.MANIFEST_BRANCH }}
      id: pwd
          
    - name: Repo Sync
      run: |
        repo sync -j$(nproc --all) --force-sync
      working-directory: workspace
      
    - name: Move files to workspace
      run: |
        mkdir -p workspace/${{ env.DEVICE_PATH }}
        ls | grep -v workspace | xargs -I{} mv {} workspace/${{ env.DEVICE_PATH }}

    - name: Clone common tree
      if: |
        env.COMMON_TREE_URL != null
        && env.COMMON_PATH != null
      run: |
        git clone ${{ env.COMMON_TREE_URL }} -b ${{ env.DEVICE_TREE_BRANCH }} ./${{ env.COMMON_PATH }}
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 3

    - name: Switch to Python 2
      run: |
        sudo apt -y install python2
        sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 1
        python --version

    - name: Building recovery
      run: |
            source build/envsetup.sh
            export ALLOW_MISSING_DEPENDENCIES=true
            lunch ${{ env.MAKEFILE_NAME }}-eng && make clean && make recoveryimage -j$(nproc --all)
      working-directory: ${{ steps.pwd.outputs.workspace-folder }}

    - name: Upload to Release
      uses: softprops/action-gh-release@v1
      with:
        files: | 
          workspace/out/target/product/${{ env.DEVICE_NAME }}/${{ env.BUILD_TARGET }}.img
          workspace/out/target/product/${{ env.DEVICE_NAME }}/*.zip
          workspace/out/target/product/${{ env.DEVICE_NAME }}/*vendor*.img
        name: ${{ env.DEVICE_NAME }}-${{ github.run_id }}
        tag_name: ${{ github.run_id }}
        body: |
          Manifest: ${{ env.MANIFEST_BRANCH }}
          Device: ${{ env.DEVICE_NAME }}
          Target: ${{ env.BUILD_TARGET }}.img
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
